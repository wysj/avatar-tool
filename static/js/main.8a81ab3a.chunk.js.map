{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["WIDTH","HEIGHT","App","useState","text","setText","color","setColor","background","setBackground","useEffect","console","log","drawAvatar","context","document","querySelector","getContext","clearRect","fillStyle","beginPath","arc","Math","PI","closePath","fill","font","textAlign","fillText","className","span","maxLength","value","onInput","e","target","style","padding","content","onChangeComplete","hex","type","onClick","canvas","link","createElement","download","href","toDataURL","body","appendChild","click","remove","handleDownload","id","width","height","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8a81ab3a.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport { Row, Col, Input, Button, Popover } from 'antd';\nimport { SketchPicker } from 'react-color';\n\nimport './App.css';\n\nconst WIDTH = 300;\nconst HEIGHT = 300;\n\nfunction App() {\n\n  const [text, setText] = useState('杨明');\n  const [color, setColor] = useState('#ffffff');\n  const [background, setBackground] = useState('#0000ff');\n\n  useEffect(() => {\n    console.log(text, color, background);\n\n    drawAvatar()\n  }, [text, color, background]);\n\n\n  const drawAvatar = () => {\n    const canvas = document.querySelector('#avatar');\n    const context = canvas.getContext('2d');\n\n    context.clearRect(0, 0, WIDTH, HEIGHT);\n\n    context.fillStyle = background;\n\n    context.beginPath();\n    context.arc(WIDTH / 2, HEIGHT / 2, WIDTH / 2, 0, 2 * Math.PI, true);\n    context.closePath();\n    context.fill();\n\n    context.fillStyle = color;\n    context.font = HEIGHT / 2.2 + 'px \"Microsoft Yahei\"';\n    context.textAlign = 'center';\n\n    context.fillText(text, WIDTH / 2, HEIGHT / 1.5);\n  }\n\n  const handleDownload = () => {\n    const canvas = document.querySelector('#avatar');\n    const link = document.createElement('a');\n    link.download = 'avatar';\n    link.href = canvas.toDataURL('image/png');\n    document.body.appendChild(link);\n    link.click();\n    link.remove();\n  }\n\n  return (\n    <div className=\"App\">\n      <Row>\n        <Col span=\"12\">\n          <Row>\n            <Col span={6}>内容：</Col>\n            <Col span={12}>\n              <Input maxLength=\"2\" value={text} onInput={(e) => { setText(e.target.value) }} />\n            </Col>\n          </Row>\n          <Row>\n            <Col span={6}>文字颜色：</Col>\n            <Col span={12}>\n              <Popover\n                style={{ padding: 0 }}\n                content={\n                  <SketchPicker\n                    color={color}\n                    onChangeComplete={(value) => setColor(value.hex)}\n                  />\n                }>\n                <Input maxLength=\"2\" value={color} onInput={(e) => { setColor(e.target.value) }} />\n              </Popover>\n            </Col>\n          </Row>\n          <Row>\n            <Col span={6}>背景颜色：</Col>\n            <Col span={12}>\n              <Popover\n                style={{ padding: 0 }}\n                content={\n                  <SketchPicker\n                    color={background}\n                    onChangeComplete={(value) => setBackground(value.hex)}\n                  />\n                }>\n                <Input maxLength=\"2\" value={background} onInput={(e) => { setBackground(e.target.value) }} />\n              </Popover>\n            </Col>\n          </Row>\n          <Row>\n            <Col span={6}></Col>\n            <Col span={12}><Button type=\"primary\" onClick={() => { handleDownload() }}>下载图片</Button></Col>\n          </Row>\n\n        </Col>\n        <Col span=\"12\">\n          <canvas id=\"avatar\" width=\"300\" height=\"300\" />\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport 'antd/dist/antd.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}