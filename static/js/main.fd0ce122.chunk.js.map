{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Header","Layout","Content","WIDTH","HEIGHT","App","useState","text","setText","color","setColor","background","setBackground","useEffect","console","log","drawAvatar","context","document","querySelector","getContext","clearRect","fillStyle","beginPath","arc","Math","PI","closePath","fill","font","textAlign","fillText","className","xs","sm","md","lg","xl","span","maxLength","value","onInput","e","target","style","padding","content","onChangeComplete","hex","type","onClick","canvas","link","createElement","download","href","toDataURL","body","appendChild","click","remove","handleDownload","id","width","height","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.fd0ce122.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport { Row, Col, Input, Button, Popover, Layout } from 'antd';\nimport { SketchPicker } from 'react-color';\n\nimport './App.css';\n\nconst { Header, Content } = Layout;\n\nconst WIDTH = 300;\nconst HEIGHT = 300;\n\nfunction App() {\n\n  const [text, setText] = useState('杨明');\n  const [color, setColor] = useState('#ffffff');\n  const [background, setBackground] = useState('#0000ff');\n\n  useEffect(() => {\n    console.log(text, color, background);\n\n    drawAvatar()\n  }, [text, color, background]);\n\n\n  const drawAvatar = () => {\n    const canvas = document.querySelector('#avatar');\n    const context = canvas.getContext('2d');\n\n    context.clearRect(0, 0, WIDTH, HEIGHT);\n\n    context.fillStyle = background;\n\n    context.beginPath();\n    context.arc(WIDTH / 2, HEIGHT / 2, WIDTH / 2, 0, 2 * Math.PI, true);\n    context.closePath();\n    context.fill();\n\n    context.fillStyle = color;\n    context.font = HEIGHT / 2.2 + 'px \"Microsoft Yahei\"';\n    context.textAlign = 'center';\n\n    context.fillText(text, WIDTH / 2, HEIGHT / 1.5);\n  }\n\n  const handleDownload = () => {\n    const canvas = document.querySelector('#avatar');\n    const link = document.createElement('a');\n    link.download = 'avatar';\n    link.href = canvas.toDataURL('image/png');\n    document.body.appendChild(link);\n    link.click();\n    link.remove();\n  }\n\n  return (\n    <Layout>\n      <Header>\n        <span className=\"header\">\n          头像工具\n        </span>\n      </Header>\n      <Content className=\"App\">\n        <div className=\"app-body\">\n          <Row>\n            <Col xs={24} sm={24} md={24} lg={12} xl={12}>\n              <Row>\n                <Col span={6}>内容：</Col>\n                <Col span={12}>\n                  <Input maxLength=\"2\" value={text} onInput={(e) => { setText(e.target.value) }} />\n                </Col>\n              </Row>\n              <Row>\n                <Col span={6}>文字颜色：</Col>\n                <Col span={12}>\n                  <Popover\n                    style={{ padding: 0 }}\n                    content={\n                      <SketchPicker\n                        color={color}\n                        onChangeComplete={(value) => setColor(value.hex)}\n                      />\n                    }>\n                    <Input maxLength=\"2\" value={color} onInput={(e) => { setColor(e.target.value) }} />\n                  </Popover>\n                </Col>\n              </Row>\n              <Row>\n                <Col span={6}>背景颜色：</Col>\n                <Col span={12}>\n                  <Popover\n                    style={{ padding: 0 }}\n                    content={\n                      <SketchPicker\n                        color={background}\n                        onChangeComplete={(value) => setBackground(value.hex)}\n                      />\n                    }>\n                    <Input maxLength=\"2\" value={background} onInput={(e) => { setBackground(e.target.value) }} />\n                  </Popover>\n                </Col>\n              </Row>\n              <Row>\n                <Col span={6}></Col>\n                <Col span={12}><Button type=\"primary\" onClick={() => { handleDownload() }}>下载图片</Button></Col>\n              </Row>\n            </Col>\n            <Col xs={24} sm={24} md={24} lg={12} xl={12}>\n              <canvas id=\"avatar\" width=\"300\" height=\"300\" />\n            </Col>\n          </Row>\n        </div>\n      </Content>\n    </Layout>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport 'antd/dist/antd.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}